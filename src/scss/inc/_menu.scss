// Menu styles (mobile first)

.menu {
	padding: 0;
	margin: 0;
	width: 100%;
	min-height: 100%;
	position: relative;
	line-height: map-get($sizes, 'menu-height');
	font-size: map-get($sizes, 'font-size');
	background: map-get($colors, 'menu-bg');
	
	@include from(xs) {
		background: map-get($colors, 'menu-bg');
		height: map-get($sizes, 'menu-height');
		min-height: auto;
		
		@if map-get($position, 'menu-fixed') == true {
			position: fixed;
		}
	}
	
	a {
		&.active-parent {
			background: map-get($colors, 'active-bg');
			color: map-get($colors, 'active-color');
		}
	}
	
	//to-left (childs)
	@include from(xs) {
		
		& > ul > .menu__item.to-left > ul {
			right: 0;
		}
		
		& ul > .menu__sub-menu__item.to-left > ul {
			left: -(map-get($sizes, 'submenu-width'));
		}
		
		& .menu__sub-menu.to-left-ul > li > a {
			text-align: right;
			.arrow {
				text-align: right;
				transform: rotate(135deg);
				right: auto;
				left: 0;
			}
		}
	}
	//to-left (childs)

	& > ul {
		
		margin: 0;
		padding: 0;
		
		@include from(xs) {
			display: flex;
			flex-direction: row;
			justify-content: map-get($position, 'menu-position');
		}
		
		& > li > a {
			padding: 0 map-get($sizes, 'link-padding');
		}
		
	}

	&__item {
		position: relative;
		border-bottom: 1px solid map-get($colors, 'xs-borders');
		line-height: map-get($sizes, 'menu-height-xs');
		position: relative;
		list-style: none;
		
		@include from(xs) {
			border-bottom: none;
			line-height: map-get($sizes, 'menu-height');
		}
		
		// sub-menu icon
		& a .arrow {
			transform: rotate(-45deg);
			width: 50px;
			text-align: center;
			position: absolute;
			right: 0;
			display: inline-block;
			transition: transform 0.3s;
			
			@include from(xs) {
				width: auto;
				margin: 0 10px;
			}
			
			&:before {
				border: solid map-get($colors, 'link-color');
				border-width: 0 2px 2px 0;
				display: inline-block;
				padding: 2px;
				content: '';
			}
			
			&.open {
				transform: rotate(45deg);
			}
		}
		
		// first level icon
		& > a .arrow {
			@include from(xs) {
				transform: rotate(45deg);
			}
		}
		
				
		& a {
			font-family: $font-family;
			font-size: map-get($sizes, 'font-size');
			text-decoration: none;
			transition: all 0.3s;	
			display: block;
			position: relative;
			font-weight: 300 !important;
			transform: translate(0,0) !important;
			background: map-get($colors, 'link-bg');
			color: map-get($colors, 'link-color');
			
			&:hover {
				background: map-get($colors, 'link-bg-hover');
				color: map-get($colors, 'link-color-hover');
				// arrow hover color
				.arrow:before {
					border: solid map-get($colors, 'link-color-hover');
					border-width: 0 2px 2px 0;
				}
			}
		}
	}
	
	
	&__link {
		font-weight: 300 !important;
		transform: translate(0,0) !important;
	}
		

	&__sub-menu {
		margin: 0;
		padding: 0;
		text-align: left;
		background: map-get($colors, 'submenu-bg');
		pointer-events: none;
		top: 0;
		display: none;
		opacity: 1;
		visibility: visible;
		position: relative;
		
		@include from(xs) {
			position: absolute;
			visibility: hidden;
			opacity: 0;
			top: map-get($sizes, 'menu-height');
			pointer-events: none;
			transition: all 0.3s;
			transform: translate(0, 60px);
			z-index: 999;
		}
	
		a .arrow {
			display: inline-block;
			margin-left: 10px;	
			transform: rotate(-45deg);
			
			&:before {
				border: solid map-get($colors, 'submenu-color');
				border-width: 0 2px 2px 0;
				display: inline-block;
				padding: 2px;
				content: '';
			}
		}
					
		&.open {
			visibility: visible;
			opacity: 1;
			display: block;
			pointer-events: auto;
			transform: translate(0, 0);
		}

		&__item {
			display: block;
			width: map-get($sizes, 'submenu-width');
			position: relative;
			min-width: 100%;
			
			@include from(xs) {
				line-height: map-get($sizes, 'submenu-height');
				height:map-get($sizes, 'submenu-height');
				padding-right: 0;
			}
			
			& a {
				display: block;
				font-size: map-get($sizes, 'submenu-font-size');
				//@extend %font-smooth;
				font-weight: normal;
				text-align: left;
				background: map-get($colors, 'submenu-bg');
				color: map-get($colors, 'submenu-color');

				&:hover {
					background: map-get($colors, 'submenu-bg-hover');
					color: map-get($colors, 'submenu-color-hover');
					font-weight: normal;
					//submenu arrow hover
					.arrow:before {
						border: solid map-get($colors, 'submenu-color-hover');
						border-width: 0 2px 2px 0;
					}
				}
			}
		}

		& .menu__sub-menu {
			top: 0;
			left: 0;	
			position: relative;
			
			@include from(xs) {
				top: 0;
				left: map-get($sizes, 'submenu-width');
				transition: all 0.3s;
				transform: translate(-60px, 0);
				position: absolute;
			}
			
			&.open {
				visibility: visible;
				opacity: 1;
				transform: translate(0, 0);
			}
		}
		
		& > li > a {
			padding-left: 2em;
		}
		
		& li ul a {
			padding-left: 3em;
		}
		
		& li ul li ul a {
			padding-left: 4em;
		}
		
		& li ul li ul li ul a {
			padding-left: 5em;
		}
		
		@include from(xs) {
			& li a {
				padding: 0 1em!important;
			}
		}
	}
}

// Menu icon (hamburger)
.menu-button {
	padding: $nav-btn-padding;
	background: $nav-btn-background;
	border: none;
	cursor: pointer;
	transition: 0s;
	border-radius: $nav-btn-radius;
	@if( $nav-btn-shadow == true ){
		box-shadow: 0 0 5px rgba(black, 0.2);
	}
	width: auto;
	position: fixed;
	top: 10px;
	right: 10px;
	
	&.visible-xs {
		@include from(xs) {
			display: none;
		}
	}
}

.burger-icon {
	@include burger($nav-width, $nav-thickness, $nav-spacing, $nav-color);
}

.menu.open .burger-icon {
	@include burger($nav-width, $nav-thickness, $nav-spacing, #222);
}

.menu-button.is-active .burger-icon {
	@include burger-to-cross;
}